// Problem: The "Sort Colors" problem, also known as the Dutch National Flag problem, requires sorting an array containing the integers 0, 1, and 2 such that all 0s come first, followed by all 1s, and then all 2s.
#include <iostream>
#include <vector>
using namespace std;

void sortColors(vector<int>& nums) {
    int low = 0, mid = 0, high = nums.size() - 1;

    while (mid <= high) {
        if (nums[mid] == 0) {
            swap(nums[low++], nums[mid++]);
        }
        else if (nums[mid] == 1) {
            mid++;
        }
        else { // nums[mid] == 2
            swap(nums[mid], nums[high--]);
        }
    }
}

// Helper to print array
void printArray(const vector<int>& nums) {
    for (int n : nums)
        cout << n << " ";
    cout << endl;
}

int main() {
    vector<int> nums = {2, 0, 2, 1, 1, 0};
    cout << "Original array: ";
    printArray(nums);

    sortColors(nums);

    cout << "Sorted colors: ";
    printArray(nums);

    return 0;
}
